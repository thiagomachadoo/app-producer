version: '3.8'

services:
  mongo:
    image: mongo
    ports:
      - "27017:27017"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # porta do broker (AMQP)
      - "15672:15672" # porta do painel web
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  app-producer:
    build:
      context: .
    ports:
      - "8080:8080"
    environment:
      - MONGO_URI=mongodb://mongo:27017/notificationdb
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_ANALYTICS_ENABLED=true
      - DD_LOGS_INJECTION=true
    depends_on:
      - mongo
      - rabbitmq
      - datadog-agent
    logging:
      driver: "json-file"
      options:
        tag: "app-producer"
  app-consumer:
    build:
      context: ../app-consumer
    env_file:
      - ../app-consumer/.env
    ports:
      - "8081:8080"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    depends_on:
      - rabbitmq
  datadog-agent:
    image: gcr.io/datadoghq/agent:latest
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
    ports:
      - "8126:8126"  # Porta do APM
      - "8125:8125/udp"  # StatsD (opcional para m√©tricas customizadas)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro